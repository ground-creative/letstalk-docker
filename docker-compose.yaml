services:
  app:
    container_name: ${CONTAINER_NAME}
    image: ${DOCKER_IMAGE}
    restart: ${RESTART}
    volumes:
      - type: bind
        source: ${VOLUME}
        target: ${WORK_DIR}
      - type: bind
        source: ./logs
        target: /logs
      - ./mongod.conf:/etc/mongod.conf
      - ./mongo:/mongo
      - ./knowledge_base:/knowledge_base
      - ./vector_store:/vector_store
    #command: mongod --config /etc/mongod.conf
    build:
      context: .
      dockerfile: ${DOCKER_FILE}
      args:
        DOCKER_IMAGE: ${DOCKER_IMAGE}
        VOLUME: ${VOLUME}
        WORK_DIR: ${WORK_DIR}
        APP_REPOSITORY_URL: ${APP_REPOSITORY_URL}
        USRID: ${USRID}
        GRPID: ${GRPID}
    environment:
      - "TEST=${TEST}"
      - "CONTAINER_NAME=${CONTAINER_NAME}"
      - "COMMAND=${COMMAND}"
      - "VOLUME=${VOLUME}"
      - "DOCKER_IMAGE=${DOCKER_IMAGE}"
      - "WORK_DIR=${WORK_DIR}"
      - "TZ=${TIMEZONE}"
      - "SERVER_ADDRESS=${SERVER_ADDRESS}"
      - "SERVER_PORT=${SERVER_PORT}"
      - "LOG_LEVEL=${LOG_LEVEL}"
      - "DEBUG_APP=${DEBUG_APP}"
      - "WEB_PANEL_ADDRESS=${WEB_PANEL_ADDRESS}"
      - "WEB_PANEL_PREFIX=${WEB_PANEL_PREFIX}"
      - "WEB_PANEL_PORT=${WEB_PANEL_PORT}"
      - "BACKEND_PREFIX=${BACKEND_PREFIX}"
      - "APP_REPOSITORY_URL=${APP_REPOSITORY_URL}"
      - "APP_SECRET_KEY=${APP_SECRET_KEY}"
      - "UPLOAD_FOLDER=${UPLOAD_FOLDER}"
      - "USRID=${USRID}"
      - "GRPID=${GRPID}"
      - "MYSQL_HOST=${MYSQL_HOST}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASS=${MYSQL_PASS}"
      - "MYSQL_DB=${MYSQL_DB}"
      - "MYSQL_PORT=${MYSQL_PORT}"
      - "AUTH0_DOMAIN=${AUTH0_DOMAIN}"
      - "API_AUDIENCE=${API_AUDIENCE}"
      - "ALGORITHMS=${ALGORITHMS}"
      - "VECTOR_STORE_PATH=${VECTOR_STORE_PATH}"
      - "KNOWLEDGE_BASE_PATH=${KNOWLEDGE_BASE_PATH}"
    logging:
      driver: "${LOG_DRIVER}"
      options:
        tag: "{{.Name}}"
    ports:
      - "${SERVER_PORT:-5000}:${SERVER_PORT:-5000}"
    networks:
      - default

networks:
  default:
    external:
      name: ${NETWORK_NAME}
